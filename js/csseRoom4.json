{
    "csse": [
        {
            "time": "1:00 PM - 1:15 PM",
            "projectId": "csse-4-100",
            "title": "Software Development at Grant Street Group",
            "studentName": "Ranveer Randhawa",
            "studentMajor": "CSSE",
            "projectType": "Internship - Grant Street Group",
            "facultyAdvisor": "Dr. Clark Olson",
            "posterLink": "./posters/csse/randhawa-ranveer.jpg",
            "abstract": "During my capstone, I worked, and still do, as a full time Software Development at Grant Street Group. My first 10 weeks of employment was spent in a bootcamp where I learned perl, internal software development processes, and architecture of TaxSys. During the end of my bootcamp, I worked on a toy new-hire project. Since it was my first industry role, it was helpful to have a formal training on the software development processes and the new-hire project helped me practice the knowledge gained during trainings.\n\n After that, I was briefly a part of TaxSys Accounts Service team where my notable works were investigating a performance intensive action and adding a feature to improve testing experience for Business Analysts. I used a Perl module named, NYTPROF, to profile the relevant code, and identified bottlenecks by analyzing the profiling data. After identifying the bottlenecks, I suggested improvements by analyzing the relevant code associated with the bottleneck. In theory, my suggestions can lead to a speedup of 30%. As far as the latter work is concerned. I used test driven development and wrote tests before I started development of the feature as the feature had a well-defined behavior, and test-driven development helped me track my progress.\n\n Recently I moved to TaxSys CALIPT team which is responsible for TaxSys California’s Property Tax. My work consists of maintenance of California’s Property Tax Module and work as a support developer assisting business analysts troubleshoot issues. Some of my notable works include writing a large set of SQL queries to fix bad data due to a software bug and investigating a bug affecting money flow. In order to investigate the bug, I made use of scientific method, and collaborated with subject matter experts.\n\n In conclusion, my capstone experience has been satisfying since I deployed the knowledge gained in university courses to make a large scale impact in the real world. Apart from personal satisfaction, during the months, I also got exposed to large codebases, software development processes, and multiple software engineering paradigms such as functional programming and test-driven development."
        },
        {
            "time": "1:15 PM - 1:30 PM",
            "projectId": "csse-4-115",
            "title": "Front-End Developer at Zumiez Inc.",
            "studentName": "Hilana Ibrahim",
            "studentMajor": "CSSE",
            "projectType": "",
            "facultyAdvisor": "Dr. Arkady Retik",
            "posterLink": "./posters/csse/ibrahim-hilana.png",
            "abstract": "During my internship at Zumiez Inc. as a front-end developer, I had the opportunity to work on the company's e-commerce website. As a part of my role, I was responsible for designing and developing user interfaces that were both visually appealing and intuitive to use. My tasks included creating responsive layouts, implementing new features, and optimizing website performance.\n\n The purpose of my work in the team was to improve the user experience and increase conversion rates on the website. The company recognized the importance of having a user-friendly website to attract and retain customers, and I was tasked with helping to achieve this goal. By creating intuitive and visually appealing interfaces, users were more likely to engage with the website and make purchases, leading to an increase in profits. To accomplish this, I collaborated with the design and development teams to ensure that the website's aesthetics and functionality were aligned with the company's brand and mission. I also collaborated with the development team to ensure that the website was optimized for speed and functionality. This required me to have a strong understanding of HTML, CSS, and JavaScript, as well as knowledge of various frameworks and libraries.\n\n As a result of our team's efforts, the website saw an increase in conversion rates and overall revenue, which had a good impact on the company's bottom line. By improving the user experience, Zumiez could better meet its customers' needs and remain relevant and competitive. Additionally, our teamwork contribution helped streamline the development process and improve collaboration between teams, resulting in more efficient and effective workflows.\n\n In addition to the technical skills I gained, I also developed strong communication and collaboration skills. Working with multiple teams required me to communicate effectively and work towards a shared goal. This experience has taught me the importance of teamwork and effective communication in achieving success. Overall, my internship at Zumiez Inc. was a valuable learning experience that provided me with practical skills, industry knowledge, and the opportunity to make a meaningful contribution to the company's success."
        },
        {
            "time": "1:30 PM - 1:45 PM",
            "projectId": "csse-4-130",
            "title": "Embedded Computing on Aerial Lifts",
            "studentName": "Braden Lee Wolf",
            "studentMajor": "CSSE",
            "projectType": "Internship - Genie",
            "facultyAdvisor": "Dr. Michael Stiber",
            "posterLink": "./posters/csse/wolf-braden-lee.jpg",
            "abstract": "For my capstone project, I worked as an intern at Genie on the controls team in the Software Engineering Co-op position. Most of the software engineers on the controls team are currently working on the 4th generation of SL1K, a control system for scissor lifts. This control system is being developed alongside the newest generation scissor lift. These new lifts are Genie’s first all-electric slab scissors. The lifts are being developed to reduce the overall BOM cost in response to market competitors designing similar lower-cost scissor lifts.\n\n A large portion of my time during this capstone was spent completing training tasks to familiarize myself with the control system code base and tools used to develop code for the system. The tools used in the development process are Jira to host the scrum issues, Bitbucket to hold the Git repos, Rhapsody to generate and write code, Visual Studio to write code, GCC to compile and link the code, CMake to build the code, a hardware based simulator board to run the code on to test, prototype lifts to run the code on to test, a Lauterbach debugger tool to debug the code, and Busmaster to transmit and receive CAN messages on the CAN bus.\n\n For this capstone I did not have my own personal project that I completed, but rather I joined the team in completing scrum issues to get a realistic experience into what it would be like to be a full-time software engineer on the team. Some of the issues I completed during my capstone project was to write negative code for a global variable that was not needed anymore with the newest generation scissor lifts and to refactor the way the machine state was updated in an older generation of a scissor lift control system that is still being serviced. A result of my efforts is that I helped the controls team to make progress towards completing the new generation and updating the old generation control system for scissor lifts."
        },
        {
            "time": "1:45 PM - 2:00 PM",
            "projectId": "csse-4-145",
            "title": "Rewind: A Music App for Dancers",
            "studentName": "Eliot Wong",
            "studentMajor": "CSSE",
            "projectType": "Individual Project - Student Defined",
            "facultyAdvisor": "Dr. Wooyoung Kim",
            "posterLink": "./posters/csse/wong-eliot.png",
            "abstract": "Mobile applications have increased greatly in popularity and demand the last several years; however, while numerous apps that either teach dance or play music exist, there’s a lack of tools that allow dancers to control their music specifically for practicing or choreographing their routines.\n\n Here I present Rewind, which is an Android mobile app that gives dancers the flexibility they need to focus on their movement rather than their music: instead of having to skip back to specific portions of a piece, they can easily mark any sections that they want to loop or return to later. The app allows control over the speed of the music and how many times a bookmark or song should be replayed, and is able to play songs from the local device or a website URL.\n\n I spent this quarter researching, interviewing, designing, and finally building the app. The first few weeks included interviewing about my two sponsors’ dance experience and gaining feedback on the initial design prototype, as well as researching existing open-source libraries; the rest of the time was spent coding the actual application. Written in React Native for its cross-platform capabilities, Rewind has the potential to expand to iOS and web servers; however, due to time constraints and environment difficulties, its current build focuses solely on Android devices. Its existing storage system also limits its ability to share information across platforms, meaning data such as current songs and bookmarks wouldn’t transfer across devices at this time.\n\n Ideas for future work include audio visualization for more precise control of bookmarks; more visually friendly ways to see where current bookmarks exist; cross-platform functionality and data sharing; and multi-user support for multiple accounts to share access to a single song’s data. However, as it currently stands, Rewind has achieved its goal of allowing dancers to save time while they focus on the repetition of their movements rather than the rewinding of their music."
        },
        {
            "time": "2:00 PM - 2:15 PM",
            "projectId": "csse-4-200",
            "title": "Arbvantage",
            "studentName": "Adrian Albu",
            "studentMajor": "CSSE",
            "projectType": "Individual Project - Student Defined",
            "facultyAdvisor": "Dr. William Erdly",
            "posterLink": "./posters/csse/albu-adrian.png",
            "abstract": "Arbvantage is a Python-based website that I designed to fill the gap in the sports betting arbitrage market by providing users with free access to sports betting arbitrage information that is currently lacking on other free websites or is only available at a premium cost. Sports betting arbitrage involves placing bets on all possible outcomes of an event in a way that guarantees a profit, regardless of the actual outcome. Despite the potential benefits, there is currently a lack of reliable and free sports betting arbitrage resources.\n\n Arbvantage uses Python and the requests library to scrape approximately 700,000 lines of JSON data from websites. Python was used due to my familiarity with it, along with the large numbers of libraries for web scraping and web development. Django was used for the website development as it is the most comprehensive framework available. At present, only two sites, PointsBet and WilliamHill, are being used to source the data. If the website doesn't find any arbitrage opportunities, it displays the best possible bets shared between the sports betting websites. The website also has the capability for users to create accounts and log their wins and losses on a public forum, as well as a private one. I chose to deploy the website to Heroku due to the ease-of-use Heroku offers compared to traditional Linux servers.\n\n To make Arbvantage a more comprehensive resource for sports bettors, I plan to add more sports betting websites that I have scraped in the future. This will require approximately 20 more weeks to complete and will involve integrating data from other sources, including new sports betting websites. These features will allow users to navigate the website to find arbitrage opportunities and the best available odds across a wider range of platforms.\n\n However, I faced several challenges during the development of the project, including limited time and knowledge about website building. Additionally, matching the data from different websites was challenging due to varying data formatting. The project was also limited by the fact that many websites will ban users who make too many data requests. As a result, the data displayed on the website is not in real-time, and the stats are updated only once a day.\n\n Despite its limitations, Arbvantage remains a valuable resource for sports bettors who wish to explore arbitrage opportunities. The website can be accessed at www.arbvantage.com. "
        },
        {
            "time": "2:15 PM - 2:30 PM",
            "projectId": "csse-4-215",
            "title": "Tesla Data Engineer Internship",
            "studentName": "Tesfa Shenkute",
            "studentMajor": "CSSE",
            "projectType": "Internship - Tesla",
            "facultyAdvisor": "Dr. William Erdly",
            "posterLink": "./posters/csse/shenkute-tesfaz.jpg",
            "abstract": "Over the past 6 months, I worked as a data engineer intern at Tesla, a prominent electric vehicle and sustainable energy company. My internship was in the IT applications engineering organization and my team specifically works on the data platform infrastructure which powers business analytics across the company. At a high level, the platform my team works on could be seen as a distributed system of servers and applications which ingest data from a variety of applications (consumers), and replicate that data to a centralized data warehouse for analytics purposes (producers).\n\n In order to onboard new applications and tables to this platform, there was a convoluted process of creating multiple new configurations, stopping existing pipelines, and building a set of Docker images with the producer and consumer applications. Although I worked on a variety of initiatives during my internship, my primary project during the second half of my internship was in order to automate this full process.\n\n I built this system using Github Actions, Ansible, Python, and Bash scripts. By the end of my internship, I was able to bring this full process from a manual task that would take up to an hour to complete by a data engineer, to a single API call that could be run by a non-technical employee and complete the job in under 5 minutes.\n\n Because of the impact that this project has, I will be working on extending it to be compatible with a wider variety of data consumer applications and tasks, when I join Tesla full-time in April. "
        },
        {
            "time": "2:30 PM - 2:45 PM",
            "projectId": "csse-4-230",
            "title": "Role-Based Access Control for QuickCheck Portal",
            "studentName": "Sam Sze",
            "studentMajor": "CSSE",
            "projectType": "UWB CSS Faculty Research",
            "facultyAdvisor": "Dr. William Erdly",
            "posterLink": "./posters/csse/sze-sam.png",
            "abstract": "This project involved me implementing role-based access control (RBAC) in a web application using Amazon Cognito. The purpose of the project was to provide users with appropriate access to features and resources based on their roles.\n\n To achieve this, I assigned users to appropriate user groups in Amazon Cognito based on their roles and responsibilities.\n\n I implemented server-side authentication using the Amazon Cognito API to authenticate users securely using the client secret. This allowed for the retrieval of access and refresh tokens.\n\n Access control was implemented based on the user's group membership information retrieved from Amazon Cognito. I used conditional logic to allow or deny access to specific features or resources based on the user's group membership.\n\n By using Amazon Cognito for user authentication and access control, I was able to achieve the goals of providing appropriate access to users and enforcing access control policies at the server level.\n\n This project provided me with valuable learning experiences in addition to the technical skills involved in implementing role-based access control in a web application using Amazon Cognito. Working on a project that already had previous people's code required me to have a deep understanding of the codebase and the ability to identify areas for improvement. Learning new technologies such as Node.js, Nuxt.js, Vue, and Amazon Cognito allowed me to gain a deeper understanding of modern web application development and authentication.\n\n Working with a group of people with different tasks required effective communication and collaboration. It also required me to adapt to different working styles and approaches to problem-solving.\n\n Overall, this project provided me not only with technical knowledge but also valuable experience in teamwork, communication, and project management. It has equipped me with skills and knowledge that I can apply to future projects and professional settings."
        },
        {
            "time": "2:45 PM - 3:00 PM",
            "projectId": "csse-4-245",
            "title": "VR Vision Therapy: Help Kids' Vision Problem",
            "studentName": "Yuze Wang",
            "studentMajor": "CSSE",
            "projectType": "UWB CSS Faculty Research",
            "facultyAdvisor": "Dr. William Erdly",
            "posterLink": "./posters/csse/wang-yuze.jpg",
            "abstract": "Do you know that 25% of all school children have vision issues that severely impact their life-long education? And what if many of them never had a chance to find this out? This is the starting point of the Eye Research Group, and the VR Project served as an interesting way to detect vision problems. As a VR team member, I was assigned to a couple of tasks in the last few months.\n\n One of the things I did is refactoring the scripts into a new structure. There are two reasons why the scripts need to be refactored, one reason is the new and uniform structure for all four apps will make them more manageable by others, and the other reason is they need to be prepared for merging.\n\n Another thing I did is created a save-and-load database system for one of the apps, Luster. The save and load database is created because there is a need to load the previous data into the app when a patient comes back for another examination.\n\n Also, I tried to merge two VR apps together. Because the VR headset that those apps are based on, Oculus Rift S, is relatively old, we want to update the apps to support a new VR headset. And we reckon if we can merge the apps together, the process of updating apps to the new device would be easier because the amount of codes is reduced and we only need to install the new VR supporting package once.\n\n All in all, although the process is much more difficult than I thought, I think most of the things I did went well. The two apps that I was assigned are refactored to the new structure. Despite couple times of reworks, the save-and-load database for Luster is finished. And in the end, I did duct tape two apps together.\n\n In hindsight, this is almost a perfect capstone project for me. The knowledge of Unity and human-centered design are the exact things I want to learn more about and practice because of the previous course I took. And it also gives me a chance to experience a real-world working environment."
        },
        {
            "time": "3:00 PM - 3:15 PM",
            "projectId": "csse-4-300",
            "title": "A Bioinformatics Approach to the Evolution of Cancer",
            "studentName": "Deepali Juneja",
            "studentMajor": "CSSE",
            "projectType": "",
            "facultyAdvisor": "Dr. William Erdly, Dr. Arnold Lund",
            "posterLink": "./posters/csse/deepali-juneja.png",
            "abstract": "Cancers are common in many multicellular animals due to changes in genetic code, external factors like UV rays, lifestyle changes, etc. A uniting feature of cancer is that is doesn't pass from one person, animal to another. When the host carrying the disease dies, so does cancer itself. However, a new paper emerged in 2019 focusing on the idea of SCANDAL hypothesis which proposed that certain species could arise from transmissible tumors i.e. cancer could be passed from one animal to another which was unheard of, previously. One form of this cancer is found in the Tasmanian devils which experience tumors transmitted to one another via biting during fights. Such transmission of cancers is unknown in human, at least for now.\n\n The SCANDAL investigated organisms referred to as SCANDALS (speciated by cancer development animals) that could be parasites that evolved from tumors. Therefore, there could be more such transmissible tumors that existed in the past and some modern animals could be descendants of these tumors. My goal of the research project was to investigate simplest species called myxozoansthat have parasitic behaviors and use computational tools to identify any known oncogene (cancer-genes) in myxozoan genome.\n\n Bioinformatics is an interdisciplinary field of science that used application of tools of computation and analysis to not only capture but also interpret biological data. I used the NCBI (National Center for Biotechnology Information) database to find genome sequences where I downloaded FASTA files which are text files containing gene sequences in a single line. After downloading the required genomic sequences, I used BLAST (Basic Local Alignment Search Tool) which compared the sequences from FASTA files and calculated statistical significance of matches. Then, I used a program called T-COFFEE that allowed to combine all results from BLAST with several alignment methods.\n\n Through the use of Python and implementations of various loops within the language, I was able to run my code to go through each genomic sequence and record sequence similarity. Using clean code and different iterations of the loop, I was able to find sequence similarities for all the genomic data. We found myxozoans lost a lot of genes over time through evolution and the 5 species we investigated did not transmit cancerous traits. Finally, the data was entered into Excel and organized to be submitted in the journal: Public Library of Science (PLoS).\n\n Further, our exploration of workflows can be used later to test the SCANDAL paper hypothesis paper even further and help researchers re-used our methods to explore other species that may be transmissible cancers. The research also provides data for the species I investigated which can provide re-direction for researchers in the future while investigating the hypothesis themselves."
        }              
    ]
}